function promiseAny(n){return new Promise(function(e,t){n=n.map(function(n){return Promise.resolve(n)}),n.forEach(function(n){return n.then(e)}),n.reduce(function(n,e){return n.catch(function(){return e})},Promise.reject()).catch(function(){return t(Error("All failed"))})})}function goToNetwork(n){return fetch(n)}var CACHE_NAME="english-card-1473102653627",PREFIX="/english-cards",URLS_TO_CACHE=["/data.json","/favicon.ico","/manifest.json","/static/css/main.449bba45.css","/static/js/main.e39b860f.js","/"].map(function(n){return PREFIX+n}),REL_URL_TO_ABS_MAP=URLS_TO_CACHE.map(function(n){return new URL(n,self.location).toString()});self.addEventListener("install",function(n){n.waitUntil(caches.open(CACHE_NAME).then(function(n){return n.addAll(URLS_TO_CACHE)}))}),self.addEventListener("activate",function(n){n.waitUntil(caches.keys().then(function(n){return Promise.all(n.filter(function(n){return n!==CACHE_NAME}).map(function(n){return console.log("Deleting "+n),caches.delete(n)}))}))}),self.addEventListener("fetch",function(n){"GET"===n.request.method&&REL_URL_TO_ABS_MAP.indexOf(n.request.url)!==-1&&n.respondWith(promiseAny([caches.match(n.request),goToNetwork(n.request)]))});